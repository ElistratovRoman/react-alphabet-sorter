{"version":3,"sources":["../src/extractLoader.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAM,iBAAiB,mCAAmC,WAAnC,GAAiD,WAAjD;;;;;;;;;AASvB,SAAS,aAAT,CAAuB,OAAvB,EAAgC;;;AAC5B,QAAM,WAAW,KAAK,KAAL,EAAX,CADsB;AAE5B,QAAM,eAAe,EAAf,CAFsB;AAG5B,QAAM,SAAS,IAAI,aAAG,MAAH,CAAU,OAAd,EAAuB;AAClC,kBAAU,KAAK,YAAL;AACV,uBAAe,IAAf;KAFW,CAAT,CAHsB;AAO5B,QAAM,UAAU;AACZ;;;;;;;;;;UAAS,UAAC,YAAD,EAAkB;AACvB,gBAAM,UAAU,eAAK,OAAL,CAAa,eAAK,OAAL,CAAa,MAAK,YAAL,CAA1B,EAA8C,YAA9C,CAAV;;;AADiB,iBAIvB,CAAK,aAAL,CAAmB,OAAnB;;;;AAJuB,gBAQnB,SAAS,IAAT,CAAc,YAAd,CAAJ,EAAiC;AAC7B,uBAAO,QAAQ,OAAR,CAAP,CAD6B;aAAjC;;AAIA,yBAAa,IAAb,CAAkB,YAAlB,EAZuB;;AAcvB,mBAAO,cAAP,CAduB;SAAlB,CAAT;AAgBA,gBAAQ,EAAR;AACA,iBAAS,EAAT;KAlBE,CAPsB;;AA4B5B,SAAK,SAAL,GA5B4B;;AA8B5B,YAAQ,MAAR,CAAe,OAAf,GAAyB,QAAQ,OAAR,CA9BG;AA+B5B,WAAO,eAAP,CAAuB,OAAvB,EA/B4B;;AAiC5B,YAAQ,GAAR,CAAY,aAAa,GAAb,CAAiB,UAAjB,EAA6B,IAA7B,CAAZ,EACK,IADL,CACU;eAAW,QAAQ,GAAR;;AAEb,kBAAC,GAAD,EAAM,CAAN;mBAAY,UAAU,GAAV,EAAe,aAAa,CAAb,CAAf,EAAgC,MAAK,OAAL,CAAa,MAAb,CAAoB,UAApB;SAA5C;KAFE,CADV,CAKK,IALL,CAKU;eAAW,QAAQ,MAAR,CAAe,OAAf,CAAuB,QAAvB,GACZ,OADY,CACJ,IAAI,MAAJ,CAAW,cAAX,EAA2B,GAA3B,CADI,EAC6B;mBAAM,QAAQ,KAAR;SAAN;KADxC,CALV,CAQK,IARL,CAQU;eAAW,SAAS,IAAT,EAAe,OAAf;KAAX,CARV,CASK,KATL,CASW,QATX,EAjC4B;CAAhC;;;;;;;;;AAoDA,SAAS,UAAT,CAAoB,OAApB,EAA6B;;;AACzB,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,eAAK,UAAL,CAAgB,OAAhB,EAAyB,UAAC,GAAD,EAAM,GAAN;mBAAc,MAAM,OAAO,GAAP,CAAN,GAAoB,QAAQ,GAAR,CAApB;SAAd,CAAzB,CADoC;KAArB,CAAnB,CADyB;CAA7B;;;;;;;;;;;;AAgBA,SAAS,SAAT,CAAmB,GAAnB,EAAwB,QAAxB,EAAmD;QAAjB,mEAAa,kBAAI;;AAC/C,QAAM,SAAS,IAAI,aAAG,MAAH,CAAU,GAAd,EAAmB;AAC9B,0BAD8B;AAE9B,uBAAe,IAAf;KAFW,CAAT,CADyC;AAK/C,QAAM,UAAU;AACZ,gBAAQ,EAAR;AACA,iCAAyB,UAAzB;AAFY,KAAV,CALyC;;AAU/C,WAAO,eAAP,CAAuB,OAAvB,EAV+C;;AAY/C,WAAO,QAAQ,MAAR,CAAe,OAAf,CAAuB,QAAvB,EAAP,CAZ+C;CAAnD;;;;;AAkBA,SAAS,SAAT,GAAqB;AACjB,WAAO,KAAK,MAAL,GAAc,QAAd,GAAyB,KAAzB,CAA+B,CAA/B,CAAP,CADiB;CAArB;;;AAKA,OAAO,OAAP,GAAiB,aAAjB;kBACe","file":"extractLoader.js","sourcesContent":["import vm from \"vm\";\nimport path from \"path\";\n\n/**\n * @name LoaderContext\n * @property {function} cacheable\n * @property {function} async\n * @property {function} addDependency\n * @property {function} loadModule\n * @property {string} resourcePath\n * @property {object} options\n */\n\n/**\n * Random placeholder. Marks the location in the source code where the result of other modules should be inserted.\n * @type {string}\n */\nconst rndPlaceholder = \"__EXTRACT_LOADER_PLACEHOLDER__\" + rndNumber() + rndNumber();\n\n/**\n * Executes the given module's src in a fake context in order to get the resulting string.\n *\n * @this LoaderContext\n * @throws Error\n * @param {string} content the module's src\n */\nfunction extractLoader(content) {\n    const callback = this.async();\n    const dependencies = [];\n    const script = new vm.Script(content, {\n        filename: this.resourcePath,\n        displayErrors: true\n    });\n    const sandbox = {\n        require: (resourcePath) => {\n            const absPath = path.resolve(path.dirname(this.resourcePath), resourcePath);\n\n            // Mark the file as dependency so webpack's watcher is working\n            this.addDependency(absPath);\n\n            // If the required file is a JS-file, we just evaluate it with node's require\n            // This is necessary because of the css-loader which uses a helper module (css-base.js) to export stuff\n            if (/\\.js$/i.test(resourcePath)) {\n                return require(absPath);\n            }\n\n            dependencies.push(resourcePath);\n\n            return rndPlaceholder;\n        },\n        module: {},\n        exports: {}\n    };\n\n    this.cacheable();\n\n    sandbox.module.exports = sandbox.exports;\n    script.runInNewContext(sandbox);\n\n    Promise.all(dependencies.map(loadModule, this))\n        .then(sources => sources.map(\n            // runModule may throw an error, so it's important that our promise is rejected in this case\n            (src, i) => runModule(src, dependencies[i], this.options.output.publicPath)\n        ))\n        .then(results => sandbox.module.exports.toString()\n            .replace(new RegExp(rndPlaceholder, \"g\"), () => results.shift())\n        )\n        .then(content => callback(null, content))\n        .catch(callback);\n}\n\n/**\n * Loads the given module with webpack's internal module loader and returns the source code.\n *\n * @this LoaderContext\n * @param {string} request\n * @returns {Promise<string>}\n */\nfunction loadModule(request) {\n    return new Promise((resolve, reject) => {\n        this.loadModule(request, (err, src) => err ? reject(err) : resolve(src));\n    });\n}\n\n/**\n * Executes the given CommonJS module in a fake context to get the exported string. The given module is expected to\n * just return a string without requiring further modules.\n *\n * @throws Error\n * @param {string} src\n * @param {string} filename\n * @param {string} [publicPath]\n * @returns {string}\n */\nfunction runModule(src, filename, publicPath = \"\") {\n    const script = new vm.Script(src, {\n        filename,\n        displayErrors: true\n    });\n    const sandbox = {\n        module: {},\n        __webpack_public_path__: publicPath // eslint-disable-line camelcase\n    };\n\n    script.runInNewContext(sandbox);\n\n    return sandbox.module.exports.toString();\n}\n\n/**\n * @returns {string}\n */\nfunction rndNumber() {\n    return Math.random().toString().slice(2);\n}\n\n// For CommonJS interoperability\nmodule.exports = extractLoader;\nexport default extractLoader;\n"]}